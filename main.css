@font-face {
  font-family: Roboto;
  src: url("Roboto-Thin.ttf");
  font-weight: normal;
}

@font-face {
  font-family: Roboto;
  src: url("Roboto-Bold.ttf");
  font-weight: bold;
}

html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
}

body {
  background: linear-gradient(
    0deg,
    rgba(44, 63, 92, 1) 0%,
    rgba(30, 33, 41, 1) 100%
  );
}
.feature {
  cursor: pointer;
}

.container {
  font-family: "Roboto", sans-serif;
  font-size: 2.5vh;
  line-height: 2;
  display: grid;
  grid-auto-flow: column dense;
  grid-template-columns: 1fr 80vh 1fr;

  overflow: hidden;
}

.boxcontainer {
  height: 96vh;
  margin-top: 2vh;
  margin-bottom: 2vh;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

.boxcontainer.left {
  grid-column: 1;
  text-align: right;
  align-items: end;
}

.boxcontainer.right {
  grid-column: 3;
}

.box {
  color: white;
  width: 100%;
  border-color: #00ffff;
  border-width: 2px;
  opacity: 0;
}

.box.left {
  border-style: none solid none none;
}

.box.right {
  border-style: none none none solid;
}

.box ul {
  margin: 0;
  padding: 0 2vh;
}

.box li {
  list-style: none;
  padding: 0;
}

.box.left li {
  transform: translateX(-10px);
}

.box.right li {
  transform: translateX(10px);
}

svg {
  grid-column: 2;
  grid-row: 1/4;
  height: 100%;
  width: 100%;
}

.title {
  fill: white;
}

.feature-text {
  fill: white;
  font-weight: bold;
}

.connector {
  fill: none;
  stroke: #00ffff;
  stroke-miterlimit: 10;
}

.textline {
  fill: none;
  stroke: #00ffff;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-miterlimit: 10;
  opacity: 0;
}

.whitefill {
  fill: #ffffff;
}

.outline {
  fill: #00ffff;
  filter: url(#glow);
}

.centergradient {
  fill: url(#SVGID_1_);
}

.padgradient {
  fill: url(#SVGID_2_);
}

.cyanstroke {
  fill: none;
  stroke: #00ffff;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-miterlimit: 10;
}

.shadow {
  opacity: 0.4;
  filter: url(#shadowblur);
}

.hide {
  fill: none;
  display: collapse;
}

.grabbable {
  cursor: grab;
}

.grabbable:active {
  cursor: grabbing;
}
